# This workflow uses actions that are not certified by GitHub.# # They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: '11'
          distribution: 'temurin'
      - name: Grant execute permission for gradlew
        run: cd dodam && chmod +x ./gradlew
        shell: bash

      # Build
      - name: Build with Gradle
        run: cd dodam && ./gradlew clean build
        shell: bash

      # 전송할 파일을 담을 디렉토리 생성
      - name: Make Directory for deliver
        run: mkdir ./dodam/deploy

      # Jar 파일 Copy
      - name: Copy Jar
        run: cp ./dodam/build/libs/*.jar ./dodam/deploy/

      # appspec.yml Copy
      - name: Copy appspec
        run: cp ./dodam/appspec.yml ./dodam/deploy/

      # script file Copy
      - name: Copy shell
        run: cp ./dodam/scripts/* ./dodam/deploy/


      # 압축파일 형태로 전달
      - name: Make zip file
        run: zip -r -qq -j ./springboot-intro-build.zip ./dodam/deploy

      # S3 Bucket으로 copy
      - name: Deliver to AWS S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws s3 cp ./springboot-intro-build.zip s3://bondyu/ --region ap-northeast-2

      # Deploy
      - name: Deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws deploy create-deployment --application-name springboot-intro --deployment-group-name spring-boot-deply-group --file-exists-behavior OVERWRITE --s3-location bucket=bondyu,bundleType=zip,key=springboot-intro-build.zip --region ap-northeast-2
